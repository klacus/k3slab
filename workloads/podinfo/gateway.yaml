apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: podinfo-cert
  namespace: hello # Or the namespace where you want the Secret to be created
spec:
  secretName: podinfo-cert # The name of the Secret that will store the certificate
  commonName: podinfo.services.labk3s.perihelion.lan
  subject:
    organizations:
      - Home Lab 
    organizationalUnits:
      - K3s Lab
  duration: 720h # 30 days (720 hours)
  renewBefore: 240h # 10 days (240 hours)
  dnsNames:
    - podinfo.services.labk3s.perihelion.lan
  issuerRef:
    # This should reference your cert-manager Issuer or ClusterIssuer.
    # Replace 'my-issuer' with the name of your Issuer or ClusterIssuer.
    # Replace 'Issuer' with 'ClusterIssuer' if you are using a ClusterIssuer.
    name: my-ca-issuer
    kind: ClusterIssuer # Or 'ClusterIssuer'
    group: cert-manager.io
  usages:
      - digital signature
      - key agreement
      - server auth
      - client auth
  privateKey:
    algorithm: RSA
    size: 4096 # Or 4096 for stronger security
---
apiVersion: gateway.networking.k8s.io/v1
kind: GatewayClass
metadata:
  name: traefik # A unique name for this GatewayClass
spec:
  controllerName: "traefik.io/gateway-controller" # Replace with the actual controller name
  # description: "A simple GatewayClass for HTTP traffic" # Optional description
  # parametersRef: # Optional: Reference to a parameters resource
  #   group: example.com
  #   kind: GatewayClassConfig
  #   name: traefik-parameters
  #   namespace: default # Required if parametersRef is namespaced
--- 
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: my-gateway
  namespace: hello # Or the namespace where you want your gateway to run
spec:
  gatewayClassName: traefik # Replace with the name of your GatewayClass
  listeners:
    - name: http
      protocol: HTTP
      port: 8000
      allowedRoutes:
        namespaces:
          from: Same 
    - name: https
      protocol: HTTPS
      port: 8443
      tls:
        mode: Terminate
        certificateRefs:
          - name: podinfo-cert
            namespace: hello
      allowedRoutes:
        namespaces:
          from: Same
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: podinfo-https-route
  namespace: hello
spec:
  parentRefs:
    - name: my-gateway
      sectionName: https
      kind: Gateway

  hostnames:
    - podinfo.services.labk3s.perihelion.lan

  rules:
    - matches:
        - path:
            type: PathPrefix
            value: /

      backendRefs:
        - name: podinfo
          namespace: hello
          port: 80
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: podinfo-http-route
  namespace: hello # Or the namespace where you want your gateway to run
spec:
  parentRefs:
    # This should reference your deployed Gateway resource.
    # Replace 'my-gateway' with the actual name of your Gateway.
    # You might also need to specify the namespace of the Gateway
    # if it's not in the same namespace as the HTTPRoute.
    - name: my-gateway
      sectionName: http
      kind: Gateway
      namespace: hello
  hostnames:
    - podinfo.services.labk3s.perihelion.lan
  rules:
    - filters:
        - type: RequestRedirect
          requestRedirect:
            scheme: https
